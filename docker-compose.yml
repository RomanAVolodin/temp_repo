version: '3.8'

volumes:
  postgres_data:
  static_volume:
  media_volume:

services:
  #start POSTGRES Container
  postgres_dc:
    image: postgres:14.7
    container_name: db_container
    env_file: .postgres_dc_env
    environment:
      TZ: "Europe/Moscow"
      PGTZ: "Europe/Moscow"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always


  #start DJANGO Container from Dockerfile
  backend:
    # Путь к Dockerfile для сервиса
    build: my_app
    container_name: app_container
    volumes:
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    # Порт, с которого сервис будет доступен на локальной машине
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=movies_database
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=123qwe
      - DB_HOST=postgres_dc
      - DB_PORT=5432
    depends_on:
      - postgres_dc
    links:
      - postgres_dc:postgres_dc

  # у вас есть некий сервис, который собирается через Dockerfile и отдаёт 8000-й порт.
  # К нему нужно присоединить Nginx, который будет обрабатывать соединения на 80-м порту

  #start NGINX Container
  nginx_dc:
    image: nginx:1.19.2
    container_name: nginx_container
    #Прокидываем в Docker-контейнер конфигурацию для Nginx через volumes
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./data/:/data/:ro
      - static_volume:/opt/my_app/static/
      - media_volume:/opt/my_app/media/
    depends_on:
      - backend


  #start ELASTICSEARCH Container
  elastic_dc:
    image: elasticsearch:8.6.2
    container_name: elastic_container
#    env_file: .elastic_dc_env - это не файл с переменными окружения, пришлось закомментировать этот мусор
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1

  etl_dc:
    build: etl
    container_name: etl_container
    restart: always
    depends_on:
      - backend
      - postgres_dc
